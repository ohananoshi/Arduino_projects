/*
Horse Run Header

Made for Arduino with a 16x2 LCD display.

Author: Guilherme Arruda
Created: 23/03/23

Last updated: 17/04/23
*/

//==================================== HEADERS =====================================================

#include <LiquidCrystal.h>
#include <stdlib.h>

//========================================== SPRITES ================================================

uint8_t horse_running_sprite[4][8][8]{
{/*LL*/
{0b00000,0b00000,0b00000,0b00111,0b01011,0b00011,0b00001,0b00000},
{0b00000,0b00000,0b00000,0b00111,0b01011,0b00011,0b00001,0b00000},
{0b00000,0b00000,0b00000,0b00111,0b01011,0b01011,0b00001,0b00000},
{0b00000,0b00000,0b00000,0b00111,0b01011,0b01011,0b00010,0b00010},
{0b00000,0b00000,0b00000,0b01111,0b00011,0b00011,0b00100,0b01000},
{0b00000,0b00000,0b01000,0b00111,0b00011,0b00011,0b00100,0b01000},
{0b00000,0b00000,0b01000,0b00111,0b00011,0b00011,0b00100,0b01000},
{0b00000,0b00000,0b00000,0b01111,0b00011,0b00011,0b00010,0b00010}
},
{/*LR*/
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b01000,0b10000},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b00100,0b00100},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b00010,0b00001},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b00010,0b00001},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b00010,0b00001},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b00100,0b00100},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b01000,0b10000},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b01000,0b10000}
},
{/*UL*/
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000}
},
{/*UR*/
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000}
}
};

uint8_t horse_jumping_sprite[4][11][8]{
{/*LL*/
{0b00000,0b00000,0b00000,0b00111,0b01011,0b00011,0b00010,0b00001},
{0b00000,0b00000,0b00001,0b00111,0b01011,0b10011,0b00010,0b00001},
{0b00001,0b00011,0b00011,0b00111,0b01011,0b10011,0b00010,0b00010},
{0b00011,0b00011,0b00011,0b00111,0b01011,0b10010,0b00010,0b00000},
{0b00111,0b01011,0b10010,0b00110,0b00000,0b00000,0b00000,0b00000},
{0b00010,0b00100,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b01111,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b11011,0b00111,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b10000,0b01110,0b00111,0b10111,0b01111,0b00000,0b00000,0b00000},
{0b00000,0b10000,0b01111,0b00111,0b00111,0b00100,0b01000,0b00000},
{0b00000,0b10000,0b01000,0b00111,0b00011,0b00011,0b00010,0b00010}
},
{/*LR*/
{0b01111,0b01011,0b11111,0b11100,0b11100,0b10100,0b01000,0b00000},
{0b01111,0b11100,0b11100,0b11100,0b10100,0b00100,0b01000,0b00000},
{0b11000,0b11000,0b11100,0b10100,0b00100,0b00000,0b00000,0b00000},
{0b11000,0b11100,0b10100,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b10100,0b01000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00100,0b01000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b11100,0b00100,0b00010,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b11111,0b11000,0b11000,0b00100,0b00010,0b00000,0b00000,0b00000},
{0b01000,0b01111,0b11011,0b11111,0b11100,0b11100,0b00010,0b00001},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b00100,0b00100},
{0b01000,0b01111,0b01011,0b11111,0b11100,0b11100,0b00100,0b00100}
},
{/*UL*/
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00001},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00001,0b00011},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00111,0b01011,0b10011},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b01000,0b00111,0b00011},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b10000,0b01000,0b00111},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000}
},
{/*UR*/
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b01000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b01000,0b01111},
{0b00000,0b00000,0b00000,0b00000,0b10000,0b11110,0b10110,0b11110},
{0b00000,0b00000,0b10000,0b11110,0b10110,0b11110,0b11110,0b11000},
{0b00000,0b01000,0b01111,0b01011,0b01111,0b11100,0b11100,0b11100},
{0b00000,0b01000,0b01111,0b01011,0b01111,0b11100,0b11100,0b11100},
{0b00000,0b00000,0b00000,0b00000,0b00100,0b01111,0b11011,0b11111},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b01000,0b01111},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000}
}
};


uint8_t cacts[3][8] = {
{0b00000,0b00000,0b00100,0b10100,0b10101,0b11101,0b00111,0b00100},
{0b00000,0b00000,0b00000,0b00000,0b00100,0b00101,0b00111,0b00100},
{0b00000,0b00000,0b00000,0b00100,0b00110,0b00100,0b01100,0b00100}
};

uint8_t piter[2][8] = {
{0b00000,0b00000,0b00000,0b10000,0b01110,0b11111,0b00000,0b00000},
{0b00000,0b00000,0b00000,0b00000,0b01100,0b01011,0b11111,0b00110}
};

//=====================================================================================================

#define LCD_BLOCKS_COUNT 16
#define LCD_LINES_COUNT 2
#define LCD_BLOCK_HEIGHT 8

unsigned short int obstacle_distances[2] = {4,8};

unsigned short int obstacle_distance_count;

unsigned short int velocity = 1;//colums per second

typedef struct{
    uint8_t vector[LCD_BLOCK_HEIGHT];
    unsigned short int line;
    unsigned short int block;
}sprite;

typedef struct{
    uint8_t sprite_vectors[LCD_BLOCKS_COUNT][LCD_BLOCK_HEIGHT];
}line_buffer;

unsigned short int choose_obstacle(uint8_t** obstacle_vector, unsigned short int* distance_counter, unsigned short int* distances){
    srand(millis());
    distance_counter = (rand() % (sizeof(distances)/sizeof(distances[0])));
    
    return (rand() % (sizeof(obstacle_vector)/sizeof(obstacle_vector[0])));
}

void buffer_add(line_buffer* buffer, uint8_t* sprite_vector, unsigned short int block){
    for(unsigned short int i = 0; i < LCD_BLOCK_HEIGHT; i++){
        buffer->sprite_vectors[block][i] = sprite_vector[i];
    }
}

void sprite_merge(uint8_t* buffer_sprite_vector, uint8_t* splited_sprite_vector){

    for(unsigned short int i = 0; i < LCD_BLOCK_HEIGHT; i++){
        buffer_sprite_vector[i] = (buffer_sprite_vector[i] << velocity) | splited_sprite_vector[i];
    }
}

sprite* sprite_split(line_buffer* buffer, unsigned short int line){
    sprite* sprite_buff = (sprite*)calloc(LCD_BLOCKS_COUNT,sizeof(sprite));

    for(unsigned short int i = 0; i < LCD_BLOCKS_COUNT; i++){

        if((i == 7) || (i == 8)) continue;

        sprite_buff->block = i;
        sprite_buff->line = line;
        
        for(unsigned short int j = 0; j < LCD_BLOCK_HEIGHT; j++){
            sprite_buff->vector[j] = buffer->sprite_vectors[i][j] >> velocity;
        }
    }

    return sprite_buff;
}

void buffer_update(line_buffer* buffer, sprite* sprite_buffer){

    for(unsigned short int i = 0; i < LCD_BLOCKS_COUNT; i++){
        sprite_merge(buffer->sprite_vectors[i], sprite_buffer[i].vector);
    }
}

void buffer_print(line_buffer* buffer, LiquidCrystal obj, unsigned short int line){
    int a;
    obj.setCursor(0,line);

    for(int i = 0; i <LCD_BLOCKS_COUNT; i++){
        a = 0;
        obj.createChar(a, (uint8_t*) (buffer -> sprite_vectors[i]));
        obj.write(a);
    }
}